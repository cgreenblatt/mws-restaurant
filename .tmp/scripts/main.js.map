{"version":3,"sources":["main.js"],"names":["window","addEventListener","event","model","getURL","port","getMapCenterCoords","map","center","getRestaurantURL","id","initData","fetch","then","response","ok","Error","statusText","json","data","restaurants","forEach","restaurant","url","console","log","catch","error","controller","init","view","coordinates","initMap","addMarkers","newMap","L","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","addTo","marker","addMarker","addMarkerClickHandler","latlng","lat","lng","title","name","alt","on","markerClickHandler","sourceTarget","options"],"mappings":"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","sourcesContent":["\nwindow.addEventListener('DOMContentLoaded', (event) => {\n\n  model = {\n    getURL() {\n      const port = 9000 // Change this to your server port\n      return `http://localhost:${port}/data/restaurants.json`;\n    },\n    getMapCenterCoords: function() {\n      return {map: {center: [40.722216, -73.987501]}}\n    },\n    getRestaurantURL: function(id) {\n      return (`./restaurant.html?id=${id}`);\n    },\n    initData: function() {\n      return fetch(model.getURL())\n        .then(response => {\n          if (!response.ok)\n            throw(new Error(`Error: ${response.statusText}`));\n          return response.json();\n        })\n        .then((json) => {\n          this.data = json;\n          this.data.restaurants.forEach((restaurant) => {\n            restaurant.url = model.getRestaurantURL(restaurant.id);\n          });\n          console.log(this.data);\n          return this.data.restaurants;\n        })\n        .catch(error => {\n          console.log('opps ' + error);\n        });\n    }\n  }\n\n  controller = {\n    init: function() {\n      model.initData().then((data) => {\n        view.init({\n          coordinates: model.getMapCenterCoords(),\n          restaurants: data,\n        });\n      });\n    }\n  };\n\n  view = {\n    init: function(initData) {\n      this.initMap(initData.coordinates);\n      this.addMarkers(initData.restaurants);\n    },\n    initMap: function(init) {\n      this.newMap = L.map('map', {\n        center: init.map.center,\n        zoom: 12,\n        scrollWheelZoom: false\n      });\n      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n        mapboxToken: 'pk.eyJ1Ijoic3BhcmtwdWciLCJhIjoiY2pqaGphZmZrMHpjZzNxcXN6NnFnODV1MCJ9.mguQAJA30rXv2JkSHo6Ntg',\n        maxZoom: 18,\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n          '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n          'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        id: 'mapbox.streets'\n      }).addTo(this.newMap);\n    },\n    addMarkers(restaurants) {\n      restaurants.forEach((restaurant) => {\n          const marker = view.addMarker(restaurant);\n          view.addMarkerClickHandler(marker);\n      });\n    },\n    addMarker: function(restaurant) {\n      // https://leafletjs.com/reference-1.3.0.html#marker\n      const marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng],\n        {\n          title: restaurant.name,\n          alt: restaurant.name,\n          url: restaurant.url,\n          id: restaurant.id,\n        })\n      marker.addTo(view.newMap);\n      return marker;\n    },\n    addMarkerClickHandler: (marker) => {\n      marker.on('click', view.markerClickHandler);\n    },\n    markerClickHandler: (event) => {\n      console.log('id is ' + event.sourceTarget.options.id);\n    }\n  }\n\n\n/**\n * @description: Initialize leafconst map, called from HTML.\n */\n/*const initMap = () => {\n  let newMap;\n  newMap = L.map('map', {\n        center: [40.722216, -73.987501],\n        zoom: 12,\n        scrollWheelZoom: false\n      });\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n    mapboxToken: 'pk.eyJ1Ijoic3BhcmtwdWciLCJhIjoiY2pqaGphZmZrMHpjZzNxcXN6NnFnODV1MCJ9.mguQAJA30rXv2JkSHo6Ntg',\n    maxZoom: 18,\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n      'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets'\n  }).addTo(newMap);\n}*/\ncontroller.init();\n});\n"],"file":"main.js"}